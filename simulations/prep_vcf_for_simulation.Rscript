#!/usr/bin/env Rscript
args = commandArgs(trailingOnly=TRUE)

library(simGWAS)
library(stringr)

# test if there is at least one argument: if not, return an error
if (length(args)==0) {
  vcf_path <- '1KGP_Regions'
  vcf_file <- '1KGP_hg19_APOE_1MB.vcf.gz'
  sim_path <- 'simulated_summary_stats'
} else {
  # default output file
  vcf_path <- args[1]
  vcf_file <- args[2]
  sim_path <- args[3]
}

vcf <- data.table::fread(paste0(vcf_path,'/',vcf_file), sep='\t', header = TRUE, skip = '#CHROM')

#dim(vcf)
#head(vcf)

# Filter by maf and for SNPS

vcf_maf <- vcf[as.numeric(str_split(str_split(str_split(vcf$INFO, ";", simplify=T)[,2],
                                   ",", simplify=T)[,1],
                         "=",simplify=T)[,2]) > 0.05 &
    as.numeric(str_split(str_split(str_split(vcf$INFO, ";", simplify=T)[,2],
                                   ",", simplify=T)[,1],
                         "=",simplify=T)[,2]) < 0.95,]

#dim(vcf_maf)
#head(vcf_maf)

# 

snps <- vcf_maf$ID

snp_mat <- vcf_maf[,(which(colnames(vcf_maf) == 'FORMAT') + 1):ncol(vcf_maf)]
samps <- colnames(snp_mat)

#dim(snp_mat)
#head(snp_mat)


write.table(vcf_maf, paste0(sim_path,"/",vcf_file,"_snp_maf_0.05.tsv"), 
           col.names=T, row.names=F, quote=F, sep='\t')

write.table(snps, paste0(sim_path,"/",vcf_file,"_snp_maf_0.05.snp"), 
           col.names=F, row.names=F, quote=F)

snp_mat_t <- t(snp_mat)

snp_mat_phase_1 <- matrix(as.numeric(stringr::str_split(snp_mat_t, "|", simplify=T)[,2]), nrow=nrow(snp_mat_t), ncol=ncol(snp_mat_t))
snp_mat_phase_2 <- matrix(as.numeric(stringr::str_split(snp_mat_t, "|", simplify=T)[,4]), nrow=nrow(snp_mat_t), ncol=ncol(snp_mat_t))

#dim(snp_mat_phase_1)
#dim(snp_mat_phase_2)
#head(snp_mat_phase_1)
#head(snp_mat_phase_2)

snp_mat_phase <- rbind(snp_mat_phase_1, snp_mat_phase_2)

rownames(snp_mat_phase) <- c(paste0(colnames(snp_mat), "_1"), paste0(colnames(snp_mat), "_2"))
colnames(snp_mat_phase) <- snps

#dim(snp_mat_phase)
#head(snp_mat_phase)

freq <- as.data.frame(snp_mat_phase+1)
freq$Probability <- 1/nrow(freq)
#sum(freq$Probability)

#dim(freq)
#head(freq)

write.table(freq, paste0(sim_path,'/',vcf_file,'_freq_.tsv'),
          col.names=T, row.names=T, quote=F)
